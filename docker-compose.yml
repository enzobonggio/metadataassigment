version: '3.9'
services:
  prometheus:
    image: "prom/prometheus"
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ".prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  traefik:
    image: "traefik:v2.6"
    container_name: traefik
    hostname: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  mysql:
    container_name: mysql
    build: infra/docker/mysql
    hostname: mysql
#    ports:
#      - "3306:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 20s
      retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: password
  api:
    build: ./api
  courses:
    container_name: courses
    hostname: courses
    build: ./courses
    environment:
      SPRING_PROFILES_ACTIVE: prod
      MYSQL_PASSWORD: password
      MYSQL_USER: course_user
    depends_on:
      mysql:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.courses.rule=Host(`localhost`)  && PathPrefix(`/courses`)"
      - "traefik.http.routers.courses.entrypoints=web"
  students:
    container_name: students
    hostname: students
    build: ./students
    environment:
      SPRING_PROFILES_ACTIVE: prod
      MYSQL_PASSWORD: password
      MYSQL_USER: student_user
    depends_on:
      mysql:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.students.rule=Host(`localhost`)  && PathPrefix(`/students`)"
      - "traefik.http.routers.students.entrypoints=web"
  subscriptions:
    container_name: subscriptions
    hostname: subscriptions
    build: ./subscriptions
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      MYSQL_PASSWORD: password
      MYSQL_USER: subscription_user
    depends_on:
      mysql:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.subscriptions.rule=Host(`localhost`)  && PathPrefix(`/subscriptions`)"
      - "traefik.http.routers.subscriptions.entrypoints=web"
  zoo1:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zoo1
    container_name: zoo1
#    ports:
#      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: rouk
  kafka1:
    image: confluentinc/cp-kafka:7.2.0
    hostname: kafka1
    container_name: kafka1
#    ports:
#      - "9092:9092"
#      - "29092:29092"
#      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
